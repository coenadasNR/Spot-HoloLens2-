//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.WebotsSpot
{
    [Serializable]
    public class GaitInputMsg : Message
    {
        public const string k_RosMessageName = "webots_spot_msgs/GaitInput";
        public override string RosMessageName => k_RosMessageName;

        public double x;
        public double y;
        public double z;
        public double roll;
        public double pitch;
        public double yaw;
        public double step_length;
        public double lateral_fraction;
        public double yaw_rate;
        public double step_velocity;
        public double clearance_height;
        public double penetration_depth;
        public double swing_period;
        public double yaw_control;
        public double yaw_control_on;

        public GaitInputMsg()
        {
            this.x = 0.0;
            this.y = 0.0;
            this.z = 0.0;
            this.roll = 0.0;
            this.pitch = 0.0;
            this.yaw = 0.0;
            this.step_length = 0.0;
            this.lateral_fraction = 0.0;
            this.yaw_rate = 0.0;
            this.step_velocity = 0.0;
            this.clearance_height = 0.0;
            this.penetration_depth = 0.0;
            this.swing_period = 0.0;
            this.yaw_control = 0.0;
            this.yaw_control_on = 0.0;
        }

        public GaitInputMsg(double x, double y, double z, double roll, double pitch, double yaw, double step_length, double lateral_fraction, double yaw_rate, double step_velocity, double clearance_height, double penetration_depth, double swing_period, double yaw_control, double yaw_control_on)
        {
            this.x = x;
            this.y = y;
            this.z = z;
            this.roll = roll;
            this.pitch = pitch;
            this.yaw = yaw;
            this.step_length = step_length;
            this.lateral_fraction = lateral_fraction;
            this.yaw_rate = yaw_rate;
            this.step_velocity = step_velocity;
            this.clearance_height = clearance_height;
            this.penetration_depth = penetration_depth;
            this.swing_period = swing_period;
            this.yaw_control = yaw_control;
            this.yaw_control_on = yaw_control_on;
        }

        public static GaitInputMsg Deserialize(MessageDeserializer deserializer) => new GaitInputMsg(deserializer);

        private GaitInputMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.x);
            deserializer.Read(out this.y);
            deserializer.Read(out this.z);
            deserializer.Read(out this.roll);
            deserializer.Read(out this.pitch);
            deserializer.Read(out this.yaw);
            deserializer.Read(out this.step_length);
            deserializer.Read(out this.lateral_fraction);
            deserializer.Read(out this.yaw_rate);
            deserializer.Read(out this.step_velocity);
            deserializer.Read(out this.clearance_height);
            deserializer.Read(out this.penetration_depth);
            deserializer.Read(out this.swing_period);
            deserializer.Read(out this.yaw_control);
            deserializer.Read(out this.yaw_control_on);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.x);
            serializer.Write(this.y);
            serializer.Write(this.z);
            serializer.Write(this.roll);
            serializer.Write(this.pitch);
            serializer.Write(this.yaw);
            serializer.Write(this.step_length);
            serializer.Write(this.lateral_fraction);
            serializer.Write(this.yaw_rate);
            serializer.Write(this.step_velocity);
            serializer.Write(this.clearance_height);
            serializer.Write(this.penetration_depth);
            serializer.Write(this.swing_period);
            serializer.Write(this.yaw_control);
            serializer.Write(this.yaw_control_on);
        }

        public override string ToString()
        {
            return "GaitInputMsg: " +
            "\nx: " + x.ToString() +
            "\ny: " + y.ToString() +
            "\nz: " + z.ToString() +
            "\nroll: " + roll.ToString() +
            "\npitch: " + pitch.ToString() +
            "\nyaw: " + yaw.ToString() +
            "\nstep_length: " + step_length.ToString() +
            "\nlateral_fraction: " + lateral_fraction.ToString() +
            "\nyaw_rate: " + yaw_rate.ToString() +
            "\nstep_velocity: " + step_velocity.ToString() +
            "\nclearance_height: " + clearance_height.ToString() +
            "\npenetration_depth: " + penetration_depth.ToString() +
            "\nswing_period: " + swing_period.ToString() +
            "\nyaw_control: " + yaw_control.ToString() +
            "\nyaw_control_on: " + yaw_control_on.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
